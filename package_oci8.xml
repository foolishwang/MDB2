<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE package SYSTEM "http://pear.php.net/dtd/package-1.0">
<package version="1.0" packagerversion="1.4.11">
 <name>MDB2_Driver_oci8</name>
 <summary>oci8 MDB2 driver</summary>
 <description>This is the Oracle OCI8 MDB2 driver.
 </description>
 <maintainers>
  <maintainer>
   <user>lsmith</user>
   <name>Lukas Kahwe Smith</name>
   <email>smith@pooteeweet.org</email>
   <role>lead</role>
  </maintainer>
  <maintainer>
   <user>justinpatrin</user>
   <name>Justin Patrin</name>
   <email>justinpatrin@php.net</email>
   <role>developer</role>
  </maintainer>
  </maintainers>
 <release>
  <version>1.0.2</version>
  <date>2006-09-03</date>
  <license>BSD License</license>
  <state>stable</state>
  <notes>- flip positions property array in prepared statement objects to make it
  possible to optionally use the same named placeholder in multiple places
  inside a single prepared statement

note:
- please use the latest ext/oci8 version from pecl.php.net/oci8
 (binaries are available from snaps.php.net and pecl4win.php.net)
- by default this driver emulates the database concept other RDBMS have by this
  using the &quot;database&quot; instead of &quot;username&quot; in the DSN as the username name.
  behaviour can be disabled by setting the &quot;emulate_database&quot; option to false.
- the multi_query test failes because this is not supported by ext/oci8
- the null LOB test failes because this is not supported by Oracle

open todo items:
- enable use of read() for LOBs to read a LOB in chunks
  </notes>
  <deps>
   <dep type="php" rel="ge" version="4.3.0" optional="no"/>
   <dep type="pkg" rel="ge" version="1.0b1" optional="no">PEAR</dep>
   <dep type="pkg" rel="ge" version="2.2.1" optional="no">MDB2</dep>
   <dep type="ext" rel="has" optional="no">oci8</dep>
  </deps>
  <filelist>
   <dir name="MDB2" baseinstalldir="/">
    <dir name="Driver">
     <dir name="Datatype">
      <file role="php" name="oci8.php">
       <replace type="package-info" from="@package_version@" to="version"/>
      </file>
     </dir> <!-- /MDB2/Driver/Datatype -->
     <dir name="Function">
      <file role="php" name="oci8.php">
       <replace type="package-info" from="@package_version@" to="version"/>
      </file>
     </dir> <!-- /MDB2/Driver/Function -->
     <dir name="Manager">
      <file role="php" name="oci8.php">
       <replace type="package-info" from="@package_version@" to="version"/>
      </file>
     </dir> <!-- /MDB2/Driver/Manager -->
     <dir name="Native">
      <file role="php" name="oci8.php">
       <replace type="package-info" from="@package_version@" to="version"/>
      </file>
     </dir> <!-- /MDB2/Driver/Native -->
     <dir name="Reverse">
      <file role="php" name="oci8.php">
       <replace type="package-info" from="@package_version@" to="version"/>
      </file>
     </dir> <!-- /MDB2/Driver/Reverse -->
     <file role="php" name="oci8.php">
      <replace type="package-info" from="@package_version@" to="version"/>
     </file>
    </dir> <!-- /MDB2/Driver -->
   </dir> <!-- /MDB2 -->
  </filelist>
 </release>
 <changelog>
   <release>
    <version>1.0.2</version>
    <date>2006-09-03</date>
    <license>BSD License</license>
    <state>stable</state>
    <notes>- flip positions property array in prepared statement objects to make it
  possible to optionally use the same named placeholder in multiple places
  inside a single prepared statement

note:
- please use the latest ext/oci8 version from pecl.php.net/oci8
 (binaries are available from snaps.php.net and pecl4win.php.net)
- by default this driver emulates the database concept other RDBMS have by this
  using the &quot;database&quot; instead of &quot;username&quot; in the DSN as the username name.
  behaviour can be disabled by setting the &quot;emulate_database&quot; option to false.
- the multi_query test failes because this is not supported by ext/oci8
- the null LOB test failes because this is not supported by Oracle

open todo items:
- enable use of read() for LOBs to read a LOB in chunks
    </notes>
   </release>
   <release>
    <version>1.0.1</version>
    <date>2006-08-21</date>
    <license>BSD License</license>
    <state>stable</state>
    <notes>- return an error if a named placeholder name is used twice inside a single statement
- do not list empty contraints and indexes
- added support for &apos;primary&apos; option in createTable()
- do not set a default if type is a LOB (Request #8074)
- fixed handling return values when disable_query is set in _doQuery() and _execute()
- increased MDB2 dependency too 2.2.1

note:
- please use the latest ext/oci8 version from pecl.php.net/oci8
 (binaries are available from snaps.php.net and pecl4win.php.net)
- by default this driver emulates the database concept other RDBMS have by this
  using the &quot;database&quot; instead of &quot;username&quot; in the DSN as the username name.
  behaviour can be disabled by setting the &quot;emulate_database&quot; option to false.
- the multi_query test failes because this is not supported by ext/oci8
- the null LOB test failes because this is not supported by Oracle

open todo items:
- enable use of read() for LOBs to read a LOB in chunks
    </notes>
   </release>
   <release>
    <version>1.0.0</version>
    <date>2006-07-23</date>
    <license>BSD License</license>
    <state>stable</state>
    <notes>- added ability to escape wildcard characters in escape() and quote()
- added setTransactionIsolation()
- added savepoint support to beginTransaction(), commit() and rollback()
- added debug() call at the end of a query/prepare/execute calling (Request #7933)
- added context array parameter to debug() and make use of it whereever sensible
- added optional method name parameter to raiseError() and use whereever possible
- added ability to escape wildcard characters in escape() and quote()
- added debug() call at the end of a query/prepare/execute calling (Request #7933)
- added &apos;nativetype&apos; output to tableInfo() and getTableFieldDefinition()
- added &apos;mdb2type&apos; output to getTableFieldDefinition()
- reworked tableInfo() to use a common implementation based on getTableFieldDefinition()
  when a table name is passed (Bug #8124)
- fixed incorrect regex in mapNativeDatatype() (Bug #8256) (thx ioz at ionosfera dot com)
- use old dsn when rolling back open transactions in disconnect()
- fixed testcreateautoincrementtable for oci8
  There is still a problem when dropping the sequence, it gets inserted with a
  seemingly random string as a name
- load datatype module in tableInfo() (Bug #8116)
- surround _makeAutoincrement() and _dropAutoincrement() with a nested transaction
- grant create trigger when creating an emulated database to fix autoincrement emulation
- ensure proper quoting in _dropAutoincrement()

note: please use the latest ext/oci8 version from pecl.php.net/oci8
(binaries are available from snaps.php.net and pecl4win.php.net)

note: that by default this driver emulates the database concept other RDBMS
have by using the &quot;database&quot; instead of &quot;username&quot; in the DSN as the username
name. this behaviour can be disabled by setting the &quot;emulate_database&quot; option
to false.

open todo items:
- enable use of read() for LOBs to read a LOB in chunks
    </notes>
   </release>
   <release>
    <version>0.3.0</version>
    <date>2006-06-15</date>
    <license>BSD License</license>
    <state>beta</state>
    <notes>- added &quot;emulate_prepared&quot; option to force prepared statement emulation
- tweaked handling of free() for prepared statements
- return error if a prepared statement is attempted to be freed twice
- use setCharset() in connect()/_doConnect()
- fixed number length handling when reverse engineering numeric types
- generalized quoteIdentifier() with a property
- cosmetic performance tweak in getTableFieldDefinition()
- switched most array_key_exists() calls to !empty() to improve readability and performance
- fixed a few edge cases and potential warnings
- added ability to rewrite queries for query(), exec() and prepare() using a debug handler callback
- pass limit and offset to the result object constructor in _execute() for read statements
- optmized limit queries without offset
- make sure no additional fields are added due to using limit/offset
- check if result/connection has not yet been freed/dicsonnected before
  attempting to free a result set(Bug #7790)
- fixed small typo with &apos;clob&apos; reverse engineering

note: please use the latest ext/oci8 version from pecl.php.net/oci8
(binaries are available from snaps.php.net and pecl4win.php.net)

open todo items:
- fix issues with testcreateautoincrementtable (error on sequence creation)
- ensure that all primary/unique/foreign key handling is only in the contraint methods
- enable use of read() for LOBs to read a LOB in chunks
    </notes>
   </release>
   <release>
    <version>0.2.6</version>
    <date>2006-05-14</date>
    <license>BSD License</license>
    <state>beta</state>
    <notes>- explicitly set is_manip parameter to false for transaction debug calls
- pass parameter array as debug() all with scope &quot;parameters&quot; in every execute()
  call (bug #4119)
- typo fixes in phpdoc (thx Stoyan)
- added support for fixed and variable types for &apos;text&apos; in declarations,
  as well as in reverse engineering (Request #1523)
- made _doQuery() return a reference
- added userinfo&apos;s to all raiseError calls that previously had none
- allow using the database name in the SID generation
- only support createDatabase(), dropDatabase() and listDatabases()
  if emulate_database is enabled
- added &apos;prepared_statements&apos; supported meta data setting
- fixed issue in prepare() with parsing of ? type placeholders for LOBs
- strip of file:// prefix in writeLOBToFile()
- typo fix ressource/resource in LOB array
- do not use foreach() on lob descriptor reference array
- marked primary key as supported
- fix DSN handling in _doConnect() (Bug #4104)
- seek(0) after calling load()/writetofile()
- fixed _destroyLOB() API to match other private LOB methods
- fixed phpdoc comments of all private LOB methods

open todo items:
- fix issues with testcreateautoincrementtable (error on sequence creation)
- ensure that all primary/unique/foreign key handling is only in the contraint methods
    </notes>
   </release>
   <release>
    <version>0.2.5</version>
    <date>2006-04-16</date>
    <license>BSD License</license>
    <state>alpha</state>
    <notes>- handle null as resource when disable_query option is enabled in result object
- added missing methods in the reverse and datatype module
- aligned _modifyQuery() signature and phpdoc
- shorten autoincrement emulation related identifiers (bug #7109)
- added &apos;result_introspection&apos; supported metadata support
- use NUMBER(1) for booleans (partial fix for bug #7170)
- use mapNativeDatatype() in tableInfo() where necessary
- properly quote table names in tableInfo() (related to bug #6573)
- use connected_server_info in getServerVersion() as a cache cache
- use parent::disconnect() in disconnect()
- separated result_buffering and prefetching by adding the new result_prefetching option
- support optional dsn item &quot;port&quot; in connect (bug #7216)
- added support for length in integer declarations
- some fixes regarding boolean reverse engineering
- protect against sql injection in the reverse and manager module
- improve handling for quoted identifiers in the reverse and manager module
- fixed queries in getTableConstraintDefinition()

open todo items:
- fix issues with lobs (where the placeholder is not named like the field)
- fix crash/issues in _makeAutoincrement()
- there are still severe stability issues due to ext/oci8, especially on windows
- ensure that all primary/unique/foreign key handling is only in the contraint methods
    </notes>
   </release>
   <release>
    <version>0.2.4</version>
    <date>2006-02-05</date>
    <license>BSD License</license>
    <state>alpha</state>
    <notes>- added support for length in decimal columns
- removed ugly hack for quote parameter in quote() since it was insufficient
  (escaping also needs to be prevented)
- added support for out of order parameter binding in prepared queries
- tried to fix issues with lobs where the placeholder is not named like the field
- reset row_limit and row_offset after calling prepare() just like we do for query() and exec()
- rewrite queries for limit/offset (taken from ezc) instead of emulating
- cosmetic fix (removed &quot;row_&quot; prefix from &quot;row_limit&quot; and &quot;row_offset&quot;)
- now using INT by default instead of CHAR(1) for the boolean datatype (BC BREAK!)
- improved parsing in getServerInfo() (bug #6550)

open todo items:
- fix issues with lobs where the placeholder is not named like the field
- fix crash in _makeAutoincrement()
- handle autoincremement fields in alterTable()
- there are still a number of missing methods in the reverse and datatype module
- there are still severe stability issues due to ext/oci8, especially on windows
- ensure that all primary/unique/foreign key handling is only in the contraint methods
    </notes>
   </release>
   <release>
    <version>0.2.3</version>
    <date>2006-01-13</date>
    <license>BSD License</license>
    <state>alpha</state>
    <notes>- explicitly pass if the module is phptype specific in all loadModule calls (bug #6226)
- since we do not store the last statement in mdb2 we cannot check it
  (maybe this needs to be ported more completely from DB)
- fixed signature of executeStoredProc()
- _fixIndexName() now just attempts to remove possible formatting
- renamed _isSequenceName() to _fixSequenceName()
- _fixSequenceName() now just attempts to remove possible formatting, and only
  returns a boolean if no formatting was applied when the new &quot;check&quot; parameter is set to true
- typo fixes in _makeAutoIncrement()

open todo items:
- handle autoincremement fields in alterTable()
- there are still a number of missing methods in the reverse and datatype module
- there are still severe stability issues due to ext/oci8, especially on windows
- ensure that all primary/unique/foreign key handling is only in the contraint methods
    </notes>
   </release>
   <release>
    <version>0.2.2</version>
    <date>2005-12-30</date>
    <license>BSD License</license>
    <state>alpha</state>
    <notes>- types can now always be keyed by name or by order

open todo items:
- handle autoincremement fields in alterTable()
- there are still a number of missing methods in the reverse and datatype module
- there are still severe stability issues due to ext/oci8, especially on windows
- ensure that all primary/unique/foreign key handling is only in the contraint methods
    </notes>
   </release>
   <release>
    <version>0.2.1</version>
    <date>2005-12-28</date>
    <license>BSD License</license>
    <state>alpha</state>
    <notes>- fixed typo in _execute() that would lead to using the wrong types inside the result object
- fixed typo in _execute() that lead to using the wrong ressource inside the result object
- various fixes for alterTable()
- fixed testNow()

open todo items:
- handle autoincremement fields in alterTable()
- there are still a number of missing methods in the reverse and datatype module
- there are still severe stability issues due to ext/oci8, especially on windows
- ensure that all primary/unique/foreign key handling is only in the contraint methods
    </notes>
   </release>
   <release>
    <version>0.2.0</version>
    <date>2005-12-21</date>
    <license>BSD License</license>
    <state>alpha</state>
    <notes>- added listTableIndexes()
- fixed _dropAutoincrement()
- use _dropAutoincrement() in dropTable()
- support portability option in listTableIndexes()
- do not fix case in listUsers()
- unified case fixing in the list*() methods
- use getConnection() to access connection property
- split index and constraint handling
- quote identifiers where possible inside the manager methods depending on
  the new &apos;quote_identifier&apos; option (defaults to off)
- refactored get*Declaration() methods to use getTypeDeclaration()
- setting in_transaction to false on disconnect
- added new Function modules to handle difference in SQL functions
- force rollback() with open transactions on disconnect
- escape floats to make sure they do not contain evil characters (bug #5608)
- split off manipulation queries into exec() method from the query() method *BC BREAK*
- only if result_types is set to false in prepare() method the query will be
  handled as a DML statement *BC BREAK*
- added getServerVersion()
- added &apos;mdbtype&apos; to tableInfo() output
- changed &apos;len&apos; to &apos;length&apos; in tableInfo() output *BC BREAK*

open todo items:
- handle autoincremement fields in alterTable()
- there are still a number of missing methods in the reverse and datatype module
- there are still severe stability issues due to ext/oci8, especially on windows
- ensure that all primary/unique/foreign key handling is only in the contraint methods
    </notes>
   </release>
   <release>
    <version>0.1.2</version>
    <date>2005-10-10</date>
    <license>BSD License</license>
    <state>alpha</state>
    <notes>Warning: this release features numerous BC breaks!

There have been considerable improvements to the datatype, manager and reverse
modules. Furthermore preliminary support for auto increment and primary keys
has been added. Please note that making a field auto increment implies a single
column primary key on this field.

- alterTable now needs the full definition to work (use getTableFieldDefinition
 from Reverse module if you do not have a definition at hand) this eliminates the need
 of the declaration part in the alterTable array.
- fix PHP4.4 breakage
- fixed typo in unsigned integer declaration handling
- no need to close() the descriptor according to the docs (we do free() it though)
- use !empty() instead of isset() in fetchRow to determine if result cols were bound or result types were set
- expect keys in type arrays the same way as they are passed for the values in execute() and bindParamArray()
- add s pattern modifier to preg_replace() call for parameter searches in prepare() (bug #5362)
- moved all private fetch mode fix methods into _fixResultArrayValues() for performance reasons
- renamed MDB2_PORTABILITY_LOWERCASE to MDB2_PORTABILITY_FIX_CASE and use &apos;field_case&apos; option to determine if to upper- or lowercase (CASE_LOWER/CASE_UPPER)
- use array_map() instead of array_flip(array_change_key_case(array_flip())) to fix case of array values
- use array_key_exists() instead of isset() where possible
- changed structure of field add/remove/change in alterTable() to match MDB2_Schema
- added createIndex()
- return 0 for manipulation queries when disable_query is enabled
- tweaked field changing in alterTable()
- getTypeDeclaration() in the datatype module is now a public method

open todo items:
- code to be able to list primary contraints inside listTableIndexes()/dropIndex()
- handle autoincremement fields in alterTable() and dropTable()
- using LOBs have a tendency to crash apache (even with the uptodate PECL oci8 ext)
    </notes>
   </release>
   <release>
    <version>0.1.1</version>
    <date>2005-06-10</date>
    <license>BSD License</license>
    <state>alpha</state>
    <notes>- increased php dependency to 4.3.0 due to the usage of the streams API since beta5
- fixed typo in _getTextDeclaration()
    </notes>
   </release>
 </changelog>
</package>
