<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE package SYSTEM "http://pear.php.net/dtd/package-1.0">
<package version="1.0" packagerversion="1.4.9">
 <name>MDB2_Driver_oci8</name>
 <summary>oci8 MDB2 driver</summary>
 <description>This is the Oracle OCI8 MDB2 driver.
 </description>
 <maintainers>
  <maintainer>
   <user>lsmith</user>
   <name>Lukas Kahwe Smith</name>
   <email>smith@pooteeweet.org</email>
   <role>lead</role>
  </maintainer>
  <maintainer>
   <user>justinpatrin</user>
   <name>Justin Patrin</name>
   <email>justinpatrin@php.net</email>
   <role>developer</role>
  </maintainer>
  </maintainers>
 <release>
  <version>0.2.6</version>
  <date>2006-05-14</date>
  <license>BSD License</license>
  <state>beta</state>
  <notes>- explicitly set is_manip parameter to false for transaction debug calls
- pass parameter array as debug() all with scope &quot;parameters&quot; in every execute()
  call (bug #4119)
- typo fixes in phpdoc (thx Stoyan)
- added support for fixed and variable types for &apos;text&apos; in declarations,
  as well as in reverse engineering (Request #1523)
- made _doQuery() return a reference
- added userinfo&apos;s to all raiseError calls that previously had none
- allow using the database name in the SID generation
- only support createDatabase(), dropDatabase() and listDatabases()
  if emulate_database is enabled
- added &apos;prepared_statements&apos; supported meta data setting
- fixed issue in prepare() with parsing of ? type placeholders for LOBs
- strip of file:// prefix in writeLOBToFile()
- typo fix ressource/resource in LOB array
- do not use foreach() on lob descriptor reference array
- marked primary key as supported
- fix DSN handling in _doConnect() (Bug #4104)
- seek(0) after calling load()/writetofile()
- fixed _destroyLOB() API to match other private LOB methods
- fixed phpdoc comments of all private LOB methods

open todo items:
- fix issues with testcreateautoincrementtable (error on sequence creation)
- ensure that all primary/unique/foreign key handling is only in the contraint methods
  </notes>
  <deps>
   <dep type="php" rel="ge" version="4.3.0" optional="no"/>
   <dep type="pkg" rel="ge" version="1.0b1" optional="no">PEAR</dep>
   <dep type="pkg" rel="ge" version="2.0.1" optional="no">MDB2</dep>
   <dep type="ext" rel="has" optional="no">oci8</dep>
  </deps>
  <filelist>
   <dir name="MDB2" baseinstalldir="/">
    <dir name="Driver">
     <dir name="Datatype">
      <file role="php" name="oci8.php">
       <replace type="package-info" from="@package_version@" to="version"/>
      </file>
     </dir> <!-- /MDB2/Driver/Datatype -->
     <dir name="Function">
      <file role="php" name="oci8.php">
       <replace type="package-info" from="@package_version@" to="version"/>
      </file>
     </dir> <!-- /MDB2/Driver/Function -->
     <dir name="Manager">
      <file role="php" name="oci8.php">
       <replace type="package-info" from="@package_version@" to="version"/>
      </file>
     </dir> <!-- /MDB2/Driver/Manager -->
     <dir name="Native">
      <file role="php" name="oci8.php">
       <replace type="package-info" from="@package_version@" to="version"/>
      </file>
     </dir> <!-- /MDB2/Driver/Native -->
     <dir name="Reverse">
      <file role="php" name="oci8.php">
       <replace type="package-info" from="@package_version@" to="version"/>
      </file>
     </dir> <!-- /MDB2/Driver/Reverse -->
     <file role="php" name="oci8.php">
      <replace type="package-info" from="@package_version@" to="version"/>
     </file>
    </dir> <!-- /MDB2/Driver -->
   </dir> <!-- /MDB2 -->
  </filelist>
 </release>
 <changelog>
   <release>
    <version>0.2.6</version>
    <date>2006-05-14</date>
    <license>BSD License</license>
    <state>beta</state>
    <notes>- explicitly set is_manip parameter to false for transaction debug calls
- pass parameter array as debug() all with scope &quot;parameters&quot; in every execute()
  call (bug #4119)
- typo fixes in phpdoc (thx Stoyan)
- added support for fixed and variable types for &apos;text&apos; in declarations,
  as well as in reverse engineering (Request #1523)
- made _doQuery() return a reference
- added userinfo&apos;s to all raiseError calls that previously had none
- allow using the database name in the SID generation
- only support createDatabase(), dropDatabase() and listDatabases()
  if emulate_database is enabled
- added &apos;prepared_statements&apos; supported meta data setting
- fixed issue in prepare() with parsing of ? type placeholders for LOBs
- strip of file:// prefix in writeLOBToFile()
- typo fix ressource/resource in LOB array
- do not use foreach() on lob descriptor reference array
- marked primary key as supported
- fix DSN handling in _doConnect() (Bug #4104)
- seek(0) after calling load()/writetofile()
- fixed _destroyLOB() API to match other private LOB methods
- fixed phpdoc comments of all private LOB methods

open todo items:
- fix issues with testcreateautoincrementtable (error on sequence creation)
- ensure that all primary/unique/foreign key handling is only in the contraint methods
    </notes>
   </release>
   <release>
    <version>0.2.5</version>
    <date>2006-04-16</date>
    <license>BSD License</license>
    <state>alpha</state>
    <notes>- handle null as resource when disable_query option is enabled in result object
- added missing methods in the reverse and datatype module
- aligned _modifyQuery() signature and phpdoc
- shorten autoincrement emulation related identifiers (bug #7109)
- added &apos;result_introspection&apos; supported metadata support
- use NUMBER(1) for booleans (partial fix for bug #7170)
- use mapNativeDatatype() in tableInfo() where necessary
- properly quote table names in tableInfo() (related to bug #6573)
- use connected_server_info in getServerVersion() as a cache cache
- use parent::disconnect() in disconnect()
- separated result_buffering and prefetching by adding the new result_prefetching option
- support optional dsn item &quot;port&quot; in connect (bug #7216)
- added support for length in integer declarations
- some fixes regarding boolean reverse engineering
- protect against sql injection in the reverse and manager module
- improve handling for quoted identifiers in the reverse and manager module
- fixed queries in getTableConstraintDefinition()

open todo items:
- fix issues with lobs (where the placeholder is not named like the field)
- fix crash/issues in _makeAutoincrement()
- there are still severe stability issues due to ext/oci8, especially on windows
- ensure that all primary/unique/foreign key handling is only in the contraint methods
    </notes>
   </release>
   <release>
    <version>0.2.4</version>
    <date>2006-02-05</date>
    <license>BSD License</license>
    <state>alpha</state>
    <notes>- added support for length in decimal columns
- removed ugly hack for quote parameter in quote() since it was insufficient
  (escaping also needs to be prevented)
- added support for out of order parameter binding in prepared queries
- tried to fix issues with lobs where the placeholder is not named like the field
- reset row_limit and row_offset after calling prepare() just like we do for query() and exec()
- rewrite queries for limit/offset (taken from ezc) instead of emulating
- cosmetic fix (removed &quot;row_&quot; prefix from &quot;row_limit&quot; and &quot;row_offset&quot;)
- now using INT by default instead of CHAR(1) for the boolean datatype (BC BREAK!)
- improved parsing in getServerInfo() (bug #6550)

open todo items:
- fix issues with lobs where the placeholder is not named like the field
- fix crash in _makeAutoincrement()
- handle autoincremement fields in alterTable()
- there are still a number of missing methods in the reverse and datatype module
- there are still severe stability issues due to ext/oci8, especially on windows
- ensure that all primary/unique/foreign key handling is only in the contraint methods
    </notes>
   </release>
   <release>
    <version>0.2.3</version>
    <date>2006-01-13</date>
    <license>BSD License</license>
    <state>alpha</state>
    <notes>- explicitly pass if the module is phptype specific in all loadModule calls (bug #6226)
- since we do not store the last statement in mdb2 we cannot check it
  (maybe this needs to be ported more completely from DB)
- fixed signature of executeStoredProc()
- _fixIndexName() now just attempts to remove possible formatting
- renamed _isSequenceName() to _fixSequenceName()
- _fixSequenceName() now just attempts to remove possible formatting, and only
  returns a boolean if no formatting was applied when the new &quot;check&quot; parameter is set to true
- typo fixes in _makeAutoIncrement()

open todo items:
- handle autoincremement fields in alterTable()
- there are still a number of missing methods in the reverse and datatype module
- there are still severe stability issues due to ext/oci8, especially on windows
- ensure that all primary/unique/foreign key handling is only in the contraint methods
    </notes>
   </release>
   <release>
    <version>0.2.2</version>
    <date>2005-12-30</date>
    <license>BSD License</license>
    <state>alpha</state>
    <notes>- types can now always be keyed by name or by order

open todo items:
- handle autoincremement fields in alterTable()
- there are still a number of missing methods in the reverse and datatype module
- there are still severe stability issues due to ext/oci8, especially on windows
- ensure that all primary/unique/foreign key handling is only in the contraint methods
    </notes>
   </release>
   <release>
    <version>0.2.1</version>
    <date>2005-12-28</date>
    <license>BSD License</license>
    <state>alpha</state>
    <notes>- fixed typo in _execute() that would lead to using the wrong types inside the result object
- fixed typo in _execute() that lead to using the wrong ressource inside the result object
- various fixes for alterTable()
- fixed testNow()

open todo items:
- handle autoincremement fields in alterTable()
- there are still a number of missing methods in the reverse and datatype module
- there are still severe stability issues due to ext/oci8, especially on windows
- ensure that all primary/unique/foreign key handling is only in the contraint methods
    </notes>
   </release>
   <release>
    <version>0.2.0</version>
    <date>2005-12-21</date>
    <license>BSD License</license>
    <state>alpha</state>
    <notes>- added listTableIndexes()
- fixed _dropAutoincrement()
- use _dropAutoincrement() in dropTable()
- support portability option in listTableIndexes()
- do not fix case in listUsers()
- unified case fixing in the list*() methods
- use getConnection() to access connection property
- split index and constraint handling
- quote identifiers where possible inside the manager methods depending on
  the new &apos;quote_identifier&apos; option (defaults to off)
- refactored get*Declaration() methods to use getTypeDeclaration()
- setting in_transaction to false on disconnect
- added new Function modules to handle difference in SQL functions
- force rollback() with open transactions on disconnect
- escape floats to make sure they do not contain evil characters (bug #5608)
- split off manipulation queries into exec() method from the query() method *BC BREAK*
- only if result_types is set to false in prepare() method the query will be
  handled as a DML statement *BC BREAK*
- added getServerVersion()
- added &apos;mdbtype&apos; to tableInfo() output
- changed &apos;len&apos; to &apos;length&apos; in tableInfo() output *BC BREAK*

open todo items:
- handle autoincremement fields in alterTable()
- there are still a number of missing methods in the reverse and datatype module
- there are still severe stability issues due to ext/oci8, especially on windows
- ensure that all primary/unique/foreign key handling is only in the contraint methods
    </notes>
   </release>
   <release>
    <version>0.1.2</version>
    <date>2005-10-10</date>
    <license>BSD License</license>
    <state>alpha</state>
    <notes>Warning: this release features numerous BC breaks!

There have been considerable improvements to the datatype, manager and reverse
modules. Furthermore preliminary support for auto increment and primary keys
has been added. Please note that making a field auto increment implies a single
column primary key on this field.

- alterTable now needs the full definition to work (use getTableFieldDefinition
 from Reverse module if you do not have a definition at hand) this eliminates the need
 of the declaration part in the alterTable array.
- fix PHP4.4 breakage
- fixed typo in unsigned integer declaration handling
- no need to close() the descriptor according to the docs (we do free() it though)
- use !empty() instead of isset() in fetchRow to determine if result cols were bound or result types were set
- expect keys in type arrays the same way as they are passed for the values in execute() and bindParamArray()
- add s pattern modifier to preg_replace() call for parameter searches in prepare() (bug #5362)
- moved all private fetch mode fix methods into _fixResultArrayValues() for performance reasons
- renamed MDB2_PORTABILITY_LOWERCASE to MDB2_PORTABILITY_FIX_CASE and use &apos;field_case&apos; option to determine if to upper- or lowercase (CASE_LOWER/CASE_UPPER)
- use array_map() instead of array_flip(array_change_key_case(array_flip())) to fix case of array values
- use array_key_exists() instead of isset() where possible
- changed structure of field add/remove/change in alterTable() to match MDB2_Schema
- added createIndex()
- return 0 for manipulation queries when disable_query is enabled
- tweaked field changing in alterTable()
- getTypeDeclaration() in the datatype module is now a public method

open todo items:
- code to be able to list primary contraints inside listTableIndexes()/dropIndex()
- handle autoincremement fields in alterTable() and dropTable()
- using LOBs have a tendency to crash apache (even with the uptodate PECL oci8 ext)
    </notes>
   </release>
   <release>
    <version>0.1.1</version>
    <date>2005-06-10</date>
    <license>BSD License</license>
    <state>alpha</state>
    <notes>- increased php dependency to 4.3.0 due to the usage of the streams API since beta5
- fixed typo in _getTextDeclaration()
    </notes>
   </release>
 </changelog>
</package>
