<?xml version="1.0" encoding="ISO-8859-1" ?>
<!DOCTYPE package SYSTEM "http://pear.php.net/dtd/package-1.0">
<package version="1.0">
  <name>MDB2</name>
  <summary>database abstraction layer</summary>
  <description>PEAR MDB2 is a merge of the PEAR DB and Metabase php database abstraction layers.

It provides a common API for all support RDBMS. The main difference to most
other DB abstraction packages is that MDB2 goes much further to ensure
portability. Among other things MDB2 features:
* An OO-style query API
* A DSN (data source name) or array format for specifying database servers
* Datatype abstraction and on demand datatype conversion
* Portable error codes
* Sequential and non sequential row fetching as well as bulk fetching
* Ability to make buffered and unbuffered queries
* Ordered array and associative array for the fetched rows
* Prepare/execute (bind) emulation
* Sequence emulation
* Replace emulation
* Limited Subselect emulation
* Row limit support
* Transactions support
* Large Object support
* Index/Unique support
* Module Framework to load advanced functionality on demand
* Table information interface
* RDBMS management methods (creating, dropping, altering)
* RDBMS independent xml based schema definition management
* Altering of a DB from a changed xml schema
* Reverse engineering of xml schemas from an existing DB (currently only MySQL)
* Full integration into the PEAR Framework
* PHPDoc API documentation

Currently supported RDBMS:
MySQL
PostGreSQL
Oracle
Frontbase
Querysim
Interbase/Firebird
MSSQL
SQLite
Other soon to follow.</description>
  <maintainers>
    <maintainer>
      <user>lsmith</user>
      <name>Lukas Kahwe Smith</name>
      <email>smith@backendmedia.com</email>
      <role>lead</role>
    </maintainer>
    <maintainer>
      <user>pgc</user>
      <name>Paul Cooper</name>
      <email>pgc@ucecom.com</email>
      <role>contributor</role>
    </maintainer>
    <maintainer>
      <user>fmk</user>
      <name>Frank M. Kromann</name>
      <email>frank@kromann.info</email>
      <role>contributor</role>
    </maintainer>
    <maintainer>
      <user>quipo</user>
      <name>Lorenzo Alberton</name>
      <email>l.alberton@quipo.it</email>
      <role>contributor</role>
    </maintainer>
  </maintainers>
  <release>
    <version>2.0.0beta2</version>
    <date>2004-04-23</date>
    <license>BSD License</license>
    <state>beta</state>
    <notes>The core of MDB2 is not fairly stable API-wise. The modules, especially the
manager and reverse module, might see some API refinement before the first
stable release.
- added listTables() and listTableFields() methods to MDB2_Driver_Manager_mssql
  and MDB2_Driver_Manager_oci8
- reversed parameter order of getValue(), type parameter is now optional and
  will then be autodetected (BC break!)
- renamed get*Value() to quote*() (BC break!)
- fixed LOB management in MDB2_Driver_ibase
- moved getOne, getRow, getCol, getAll back into the exteneded module (most
  users should be able to move to the queryOne, queryRow, queryCol and queryAll
  equivalent) (BC break!)
- added getAssoc to the extended module
- fixed bug in MDB2_Driver_Datatype_Common::implodeArray()
- added sequence_col_name option to make the column name inside sequence
  emulation tables configurable
- fixed a bug in the MDB2_Driver_oci8 and MDB2_Driver_ibase buffering emulation
  when using limit queries
- removed MDB2_PORTABILITY_NULL_TO_EMPTY in favor of MDB2_PORTABILITY_EMPTY_TO_NULL
  this means that DB and MDB2 work exactly the opposite now, but it seems more
  efficient to do things the way Oracle does since this is the RDBMS which
  creates the original issue to begin with (BC break!)
- fixed a typos in getAll, getAssoc and getCol
- test suite: moved set_time_limit() call to the setup script to be easier to customize
- renamed hasMore() to valid() due to changes in the PHP5 iterator API (BC break!)
- renamed toString() to __toString() in order to take advantage of new PHP5
  goodness and made it public
- MDB2_Driver_Datatype_Common::setResultTypes() can now handle missing elements
  inside type arrays: array(2 =&gt; 'boolean', 4 =&gt; 'timestamp')
- fixed potential warning due to manipulation query detection in the query*()
  and the get*() query+fetch methods
- added tests for fetchAll() and fetchCol()
- performance tweaks for fetchAll() and fetchCol()
- fixed MDB2_Driver_Manager_mysql::listTableIndexes()
- fixed MDB2_Driver_Common::debug()
- renamed MDB2::isResult() to MDB2::isResultCommon()
- added base result class MDB2_Result from which all result sets should be
  inherited and added MDB2::isResult() which checks if a given object extends from it
- added 'result_wrap_class' option and optional parameter to query() to enable
  wrapping of result classes into an arbitrary class
- added $result_class param to all drivers where it was missing from the
  query() and _executePrepared() methods</notes>
    <deps>
      <dep type="php" rel="ge" version="4.2.0" optional="no"/>
      <dep type="pkg" rel="ge" version="1.0b1" optional="no">PEAR</dep>
      <dep type="pkg" rel="has" optional="no">XML_Parser</dep>
    </deps>
    <filelist>
      <dir baseinstalldir="/" name="/">
       <dir name="docs">
        <file role="doc" name="CONTRIBUTORS"/>
        <file role="doc" name="datatypes.html"/>
        <file role="doc" name="Driver_Datatype_skeleton.php"/>
        <file role="doc" name="Driver_Manager_skeleton.php"/>
        <file role="doc" name="Driver_Native_skeleton.php"/>
        <file role="doc" name="Driver_Reverse_skeleton.php"/>
        <file role="doc" name="Driver_skeleton.php"/>
        <file role="doc" name="MAINTAINERS"/>
        <file role="doc" name="MDB.dtd"/>
        <file role="doc" name="MDB.xsl"/>
        <file role="doc" name="querysim_readme.txt"/>
        <file role="doc" name="README"/>
        <file role="doc" name="STATUS"/>
        <file role="doc" name="TODO"/>
        <file role="doc" name="xml_schema_documentation.html"/>
        <dir name="examples">
         <file role="doc" name="example.php"/>
         <file role="doc" name="metapear_test_db.schema"/>
         <file role="doc" name="peardb_wrapper_example.php"/>
        </dir> <!-- docs/examples -->
       </dir> <!-- docs -->
       <dir name="MDB2">
        <file role="php" name="Date.php"/>
        <file role="php" name="Extended.php"/>
        <file role="php" name="Iterator.php"/>
        <file role="php" name="LOB.php"/>
        <dir name="Driver">
         <file role="php" name="fbsql.php"/>
         <file role="php" name="ibase.php"/>
         <file role="php" name="mssql.php"/>
         <file role="php" name="mysql.php"/>
         <file role="php" name="oci8.php"/>
         <file role="php" name="pgsql.php"/>
         <file role="php" name="querysim.php"/>
         <file role="php" name="sqlite.php"/>
         <dir name="Datatype">
          <file role="php" name="Common.php"/>
          <file role="php" name="fbsql.php"/>
          <file role="php" name="ibase.php"/>
          <file role="php" name="mssql.php"/>
          <file role="php" name="mysql.php"/>
          <file role="php" name="oci8.php"/>
          <file role="php" name="pgsql.php"/>
          <file role="php" name="sqlite.php"/>
         </dir> <!-- MDB2/Driver/Datatype -->
         <dir name="Manager">
          <file role="php" name="Common.php"/>
          <file role="php" name="fbsql.php"/>
          <file role="php" name="ibase.php"/>
          <file role="php" name="mssql.php"/>
          <file role="php" name="mysql.php"/>
          <file role="php" name="oci8.php"/>
          <file role="php" name="pgsql.php"/>
          <file role="php" name="sqlite.php"/>
         </dir> <!-- MDB2/Driver/Manager -->
         <dir name="Native">
          <file role="php" name="fbsql.php"/>
          <file role="php" name="ibase.php"/>
          <file role="php" name="mssql.php"/>
          <file role="php" name="mysql.php"/>
          <file role="php" name="oci8.php"/>
          <file role="php" name="pgsql.php"/>
          <file role="php" name="sqlite.php"/>
         </dir> <!-- MDB2/Driver/Native -->
         <dir name="Reverse">
          <file role="php" name="Common.php"/>
          <file role="php" name="fbsql.php"/>
          <file role="php" name="ibase.php"/>
          <file role="php" name="mssql.php"/>
          <file role="php" name="mysql.php"/>
          <file role="php" name="oci8.php"/>
          <file role="php" name="pgsql.php"/>
          <file role="php" name="sqlite.php"/>
         </dir> <!-- MDB2/Driver/Reverse -->
        </dir> <!-- MDB2/Driver -->
        <dir name="Tools">
         <file role="php" name="Manager.php"/>
         <file role="php" name="Parser.php"/>
         <file role="php" name="reverse_engineer_xml_schema.php"/>
        </dir> <!-- MDB2/Tools -->
        <dir name="Wrapper">
         <file role="php" name="peardb.php"/>
        </dir> <!-- MDB2/Wrapper -->
       </dir> <!-- MDB2 -->
       <dir name="tests">
        <file role="test" name="clitest.php"/>
        <file role="test" name="Console_TestListener.php"/>
        <file role="test" name="driver_test.schema"/>
        <file role="test" name="HTML_TestListener.php"/>
        <file role="test" name="lob_test.schema"/>
        <file role="test" name="MDB2_api_testcase.php"/>
        <file role="test" name="MDB2_bugs_testcase.php"/>
        <file role="test" name="MDB2_manager_testcase.php"/>
        <file role="test" name="MDB2_native_testcase.php"/>
        <file role="test" name="MDB2_reverse_testcase.php"/>
        <file role="test" name="MDB2_usage_testcase.php"/>
        <file role="test" name="README"/>
        <file role="test" name="test.php"/>
        <file role="test" name="test.schema"/>
        <file role="test" name="testchoose.php"/>
        <file role="test" name="tests.css"/>
        <file role="test" name="testUtils.php"/>
        <file role="test" name="test_setup.php.dist"/>
        <dir name="templates">
         <file role="test" name="results.tpl"/>
        </dir> <!-- tests/templates -->
       </dir> <!-- tests -->
       <file role="php" name="MDB2.php"/>
      </dir> <!-- / -->
    </filelist>
  </release>
  <changelog>
    <release>
      <version>2.0.0beta2</version>
      <date>2004-04-23</date>
      <license>BSD License</license>
      <state>beta</state>
      <notes>The core of MDB2 is not fairly stable API-wise. The modules, especially the
manager and reverse module, might see some API refinement before the first
stable release.
- added listTables() and listTableFields() methods to MDB2_Driver_Manager_mssql
  and MDB2_Driver_Manager_oci8
- reversed parameter order of getValue(), type parameter is now optional and
  will then be autodetected (BC break!)
- renamed get*Value() to quote*() (BC break!)
- fixed LOB management in MDB2_Driver_ibase
- moved getOne, getRow, getCol, getAll back into the exteneded module (most
  users should be able to move to the queryOne, queryRow, queryCol and queryAll
  equivalent) (BC break!)
- added getAssoc to the extended module
- fixed bug in MDB2_Driver_Datatype_Common::implodeArray()
- added sequence_col_name option to make the column name inside sequence
  emulation tables configurable
- fixed a bug in the MDB2_Driver_oci8 and MDB2_Driver_ibase buffering emulation
  when using limit queries
- removed MDB2_PORTABILITY_NULL_TO_EMPTY in favor of MDB2_PORTABILITY_EMPTY_TO_NULL
  this means that DB and MDB2 work exactly the opposite now, but it seems more
  efficient to do things the way Oracle does since this is the RDBMS which
  creates the original issue to begin with (BC break!)
- fixed a typos in getAll, getAssoc and getCol
- test suite: moved set_time_limit() call to the setup script to be easier to customize
- renamed hasMore() to valid() due to changes in the PHP5 iterator API (BC break!)
- renamed toString() to __toString() in order to take advantage of new PHP5
  goodness and made it public
- MDB2_Driver_Datatype_Common::setResultTypes() can now handle missing elements
  inside type arrays: array(2 =&gt; 'boolean', 4 =&gt; 'timestamp')
- fixed potential warning due to manipulation query detection in the query*()
  and the get*() query+fetch methods
- added tests for fetchAll() and fetchCol()
- performance tweaks for fetchAll() and fetchCol()
- fixed MDB2_Driver_Manager_mysql::listTableIndexes()
- fixed MDB2_Driver_Common::debug()
- renamed MDB2::isResult() to MDB2::isResultCommon()
- added base result class MDB2_Result from which all result sets should be
  inherited and added MDB2::isResult() which checks if a given object extends from it
- added 'result_wrap_class' option and optional parameter to query() to enable
  wrapping of result classes into an arbitrary class
- added $result_class param to all drivers where it was missing from the
  query() and _executePrepared() methods</notes>
    </release>
    <release>
      <version>2.0.0beta1</version>
      <date>2004-03-12</date>
      <license>BSD License</license>
      <state>alpha</state>
      <notes>- fixed bug in MDB2::singleton
- fixed minor bugs in prepare/execute
- added PEAR::DB wrapper (not working yet)
- fixed several bugs in the ibase driver
- fixed several PHP5 related issues
- fixed bug in sequence creation on MySQL
- fixed issues with nextid() ondemand handling in conjunction with currId()
- added native currId() implementation for the Oracle driver
- fixed sqlite driver (passes all but the REPLACE test due to a conformance issue in sqlite itself)
- removed decimal_factor property to allow changing of decimal_places option
- using native escape string methods in sqlite and mysql driver
- fixed minor conformance issues in tableInfo() in the oci8 and mysql driver
- removed optimize option and added portability option instead (ported from DB)
- added quoteIdentifier() method (ported from DB)
- added STATUS document to make the status of the drivers more transparent
- fixed a few bugs in querysim driver
- fixed issue in mysql reverse engineering: ensuring the correct case is used when
  doing assoc fetches based on portability flag setting
- updated reverse engineering script to the new MDB2 API
- removed broken implementations of currId() in the mssql and fbsql driver
- fixed a few instances of MDB_Common to the new class name of MDB_Driver_Common</notes>
    </release>
    <release>
      <version>2.0.0alpha1</version>
      <date>2004-01-05</date>
      <license>BSD License</license>
      <state>alpha</state>
      <notes>This is the first alpha release of MDB2 2.0.

MDB2 2.x breaks backwards compatibility in many ways in order to simplify
the API for both users and drivers developers.

Please note that currently only the MySQL, the PostGreSQL and the Oracle driver
have been tested to pass the test suite.

Here follows a short list of the most important changes:
- all code that is not necessary for basic operation is now separateed
  into separate modules which can be loaded with the loadModule() method
- all datatype related methods have been moved to a dataype module with
  the notable exception of getValue() and the newly introduced getDeclaration()
- added extended module for highlevel methods
- all manager method are no longer available in the core class and or
  now only available in the manager module
- all reverse engineering methods have been taken from the manager class
  and are now available through the reverse module
- a new module has been added to allow the addition of methods with
  RDBMS specific functionality (like getting the last autoincrement ID)
- LOB handling has been greatly simplified
- several methods names have been shortend
- the fetch.+() methods do not free the result set anymore
- the Manager and the reverse_engineer_xml_schema have been moved into
  a Tools directory
- all parameters are now lowercased with underscores as separators
- all drivers now support all of the dsn options that PEAR DB supports
- several methods have been removed because they offered redundant functionality
- changed prepare API type is now passed to prepare and not to setParam*()
- results are now wrapped inside objects and all methods which operate
  on resultsets have been moved into respecitive classes
- there are two types of result object: buffered (default) and unbuffered
- totally rewrote buffering and limit emulation</notes>
    </release>
  </changelog>
</package>
